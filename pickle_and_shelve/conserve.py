import pickle
import shelve
# законсервируем
# Демонстрирует консервацию данных и дуступ к ним через интерфейс полки import pickle.shelve
# rb - Чтение из бинарного файла. Если файл не существует, то Python сообщит об ошибке
# wb - запись в бинарный файл. Если файл существует, его содержимое будет заменено.
# Если файл не существует, он будет создан
# ab - Дозапись в бинарный файл. Еckи файл существует, новые данные будут дописаны
# в конец. Если файл не существует, он будет создан
# rb+ - Чтение и запись в бинарный файл. Если файл не существует, то Python сообщит
# об ошибке
# wb+ - запись и чтение из бинарного файла. Если файл существует, его содержимое будет
# заменено. Если файл не существует, то он будет создан
# ab+ - Дозапись и чтение из бинарного файла. Если файл существует, новые данные будут
# дописаны в конец. Если файл не существует, он будет создан



print('Консервация списков.')
variety = ['огурцы', 'помидоры', 'капуста']
shape = ['целые', 'кубиками', 'соломкой']
brand = ['Главпродукт', 'Чумак', 'Бондюэль']

f = open('picklesl.dat', 'ab')
f.write()


# консервация происходит с помощью функции pickle.dump(данные для консерфации,файл для сохранения)


pickle.dump(variety, f)
pickle.dump(shape, f)
pickle.dump(brand, f)
f.close()

# консервировать можно : числа, строки, кортежи, списки, словари
# что бы расконсервировать файлы используют функцию pickle.load(файл из которого выгружают)

print('\nДеконсервация списков.')
f = open('picklesl.dat', 'rb')
variety = pickle.load(f)
shape = pickle.load(f)
brand = pickle.load(f)


print(variety)
print(shape)
print(brand)


f.close()

# dump(объект, файл, [bin]) - Пишет законсервированную версию объекта в файл. Если параметр bin
# равен True, объект записывается в двоичном формате, а если False - в менее практичном, но более удобочитаемом
# текстовом формате. По умолчанию Ьin = False
# load(файл) - Расшифровывает очередной консервированный объект из файла и воэвращает его


# полка


print('\nПомещение списков на полку')
s = shelve.open("pickles2.dat")
# shelve.open -  открывает файл с консирвированными объектами
# переменная s  работает как словарь
# добавление на полку списков
s['variety'] = ['огурцы', 'помидоры', 'капуста']
s['shape'] = ['целые', 'кубиками', 'соломкой']
s['brand'] = ['Главпродукт', 'Чумак', 'Бондюэль']
# ключ в составе полки может быть только строкой
s.sync()
print('\nИзвлечение списков из файла плки:')
print("торговые марки - ", s['brand'])
print("формы - ", s['shape'])
print("виды овощей - ", s['variety'])
s.close()
input('\nНажмите Enter, что бы выйти')

# Функция shelve.open() принимает один аргумент - имя файла. Вторым, необязательным аргументом является режим доступа.
# c - Открытие файла на чтение или запись. Если файл не существует, он будет создан
# n - Создание нового файла для чтения или записи. Если файл существует, его содержимое будет заменено
# r - Чтение из файла. Если файл не существует, Python сообщит об ошибке
# w - Запись в файл. Если файл не существует, Python сообщит об ошибке
