# обработаем
try:
    num = float(input('введите число: '))
except:  # блок срабатывает, если было исключение
    print('похоже это не число')

# типы исключений
# IOError-Генерируется, если невозможно выпюлнить операцию ввода/
# вывода, например, открыть на чтение несуществующий файл
# IndexError Генерируется, если в последовательности не найден элемент
# с указанным индексом
# КeyError Генерируется, если в словаре не найден указанный ключ
# NameError Генерируется, если не найдено имя (например, имя функции
# или переменной}
# SyntaxError Генерируется, если интерпретатор обнаруживает в коде синтаксическую ошибку
# TypeError Генерируется, если стандартная операция или функция применяется к объекту неподходящего типа
# ValueError Генерируется, если стандартная операция или функция
# принимает аргумент подходящего типа, но с неподходящим
# значением
# ZeroDivisionError Генерируется, если в операции деления или нахождения
# остатка второй аргумент - ноль


try:
    num = float(input('введите число: '))
except ValueError:  # можно указать конкретное сключение, при котором блок сработает
    print('похоже это не число\n')


# обработка нескольких исключениий, разных типов
for value in(None, 'Привет!'):
    try:
        print('пытаюсь преобразовать в число: ', value, '-->', end= ' ')
        print(float(value))
    except (TypeError, ValueError):
        print('Похоже это  не число')
# также разные исключения можно отловить множеством блоков except
# исключения имеют аргумент(содержание), этот аргумент можно заключить в переменную


try:
    num = float(input('введите число: '))
except ValueError as e:
    print('это не чисо! Интерпритатор как бы говорит нам: ')
    print(e)


# try/exept/else - блок else сработает только если блок try сработал без ошибок
try:
    num = float(input('введите число: '))
except ValueError:
    print('это не число')
else:
    print('вы все ввели верно')
